/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:gui:364064:
  appc.background(230);
} //_CODE_:gui:364064:

public void button1_click1(GButton source, GEvent event) { //_CODE_:screenshot_button:805889:
  println("screenshot_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:screenshot_button:805889:

public void button1_click2(GButton source, GEvent event) { //_CODE_:grid_button:697262:
  println("grid_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:grid_button:697262:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:FurnitureList:873779:
  println("FurnitureList - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:FurnitureList:873779:

public void button1_click3(GButton source, GEvent event) { //_CODE_:delete_button:486369:
  println("delete_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:delete_button:486369:

public void custom_slider1_change1(GCustomSlider source, GEvent event) { //_CODE_:Rotate_Slider:610432:
  println("Rotate_Slider - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:Rotate_Slider:610432:

public void custom_slider1_change2(GCustomSlider source, GEvent event) { //_CODE_:Room_X:797839:
  println("custom_slider1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:Room_X:797839:

public void custom_slider2_change1(GCustomSlider source, GEvent event) { //_CODE_:Room_Y:251960:
  println("Room_Y - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:Room_Y:251960:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  gui = GWindow.getWindow(this, "Window title", 0, 0, 500, 400, JAVA2D);
  gui.noLoop();
  gui.setActionOnClose(G4P.KEEP_OPEN);
  gui.addDrawHandler(this, "win_draw1");
  screenshot_button = new GButton(gui, 52, 14, 80, 30);
  screenshot_button.setText("Screenshot");
  screenshot_button.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  screenshot_button.addEventHandler(this, "button1_click1");
  grid_button = new GButton(gui, 275, 16, 108, 30);
  grid_button.setText("Toggle Grid");
  grid_button.addEventHandler(this, "button1_click2");
  FurnitureList = new GDropList(gui, 160, 27, 90, 120, 5, 10);
  FurnitureList.setItems(loadStrings("list_873779"), 0);
  FurnitureList.addEventHandler(this, "dropList1_click1");
  delete_button = new GButton(gui, 44, 125, 80, 30);
  delete_button.setText("Delete");
  delete_button.setLocalColorScheme(GCScheme.RED_SCHEME);
  delete_button.addEventHandler(this, "button1_click3");
  Rotate_Slider = new GCustomSlider(gui, 279, 133, 100, 40, "grey_blue");
  Rotate_Slider.setShowValue(true);
  Rotate_Slider.setLimits(1, 0, 270);
  Rotate_Slider.setNbrTicks(4);
  Rotate_Slider.setStickToTicks(true);
  Rotate_Slider.setNumberFormat(G4P.INTEGER, 0);
  Rotate_Slider.setOpaque(true);
  Rotate_Slider.addEventHandler(this, "custom_slider1_change1");
  label1 = new GLabel(gui, 280, 77, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Rotation");
  label1.setOpaque(false);
  Room_X = new GCustomSlider(gui, 105, 227, 100, 40, "grey_blue");
  Room_X.setShowValue(true);
  Room_X.setLimits(800, 0, 1600);
  Room_X.setNumberFormat(G4P.INTEGER, 0);
  Room_X.setOpaque(false);
  Room_X.addEventHandler(this, "custom_slider1_change2");
  Room_Y = new GCustomSlider(gui, 273, 223, 100, 40, "grey_blue");
  Room_Y.setShowValue(true);
  Room_Y.setLimits(800, 0, 1600);
  Room_Y.setNumberFormat(G4P.INTEGER, 0);
  Room_Y.setOpaque(false);
  Room_Y.addEventHandler(this, "custom_slider2_change1");
  gui.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow gui;
GButton screenshot_button; 
GButton grid_button; 
GDropList FurnitureList; 
GButton delete_button; 
GCustomSlider Rotate_Slider; 
GLabel label1; 
GCustomSlider Room_X; 
GCustomSlider Room_Y; 
