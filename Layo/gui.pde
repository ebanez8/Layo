/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:gui:364064:
  appc.background(230);
} //_CODE_:gui:364064:

public void Screenshot_Button(GButton source, GEvent event) { //_CODE_:screenshot_button:805889:
  saveFrame("Screenshots/Screenshot " + screenshotNum + ".png"); // save screenshot of screen
  screenshotNum++;
} //_CODE_:screenshot_button:805889:

public void Grid_Button(GButton source, GEvent event) { //_CODE_:grid_button:697262:
  if (draw_g){draw_g = false;} // set draw_g to false if true
  else{draw_g = true;} // set draw_g to true if false
  
} //_CODE_:grid_button:697262:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:FurnitureList:873779:

  String selectedItem = source.getSelectedText(); // find the selected text in dropdown

  if (selectedItem == null) return; // if nothing then set to null

  if (selectedItem.equals("TBed")) { // create twin bed
    selectedFurniture = new Furniture(0, 0, 125f, 125f, 0, true,imgTBed);
  } else if (selectedItem.equals("Couch")) { // create couch
    selectedFurniture = new Furniture(0, 0, 150f, 75f, 0, true, imgCouch);
  } else if (selectedItem.equals("Table")) { // create table
    selectedFurniture = new Furniture(0, 0, 150f, 75f, 0, true, imgTable);
  } else if (selectedItem.equals("Chair")) { // create chair
    selectedFurniture = new Furniture(0, 0, 50f, 50f, 0, true, imgChair);
  } else if (selectedItem.equals("SBed")) { // create single bed
    selectedFurniture = new Furniture(0, 0, 75f, 125f, 0, true, imgSBed);
  } else if (selectedItem.equals("Plant")) { // create plant
    selectedFurniture = new Furniture(0, 0, 50f, 50f, 0, true, imgPlant);
  } else if (selectedItem.equals("Drawer")) { // create drawer
    selectedFurniture = new Furniture(0, 0, 150f, 50f, 0, true, imgDrawer);
  }

  isFurnitureSelected = true;  // set furniture selected to true
} //_CODE_:FurnitureList:873779:

public void Delete_Button(GButton source, GEvent event) { //_CODE_:delete_button:486369:
  if(delete_bool == false){delete_bool = true;} // set delete to true if false
  else if (delete_bool){delete_bool = false;} // set delete to false if true
  
} //_CODE_:delete_button:486369:

public void RoomX(GCustomSlider source, GEvent event) { //_CODE_:Room_X:797839:
  roomX = source.getValueF(); // get slider info
  room.resize(roomX, roomY); // set room to new size
  checkOutsideRoom(); // check if outside of the room
} //_CODE_:Room_X:797839:

public void RoomY(GCustomSlider source, GEvent event) { //_CODE_:Room_Y:251960:
  roomY = source.getValueF(); // get slider info
  room.resize(roomX, roomY); // set room to new size
  checkOutsideRoom(); // check if outside of the room
} //_CODE_:Room_Y:251960:

public void Clear_Button(GButton source, GEvent event) { //_CODE_:clear_Button:353556:
  room.clearFurniture(); // clear all furniture from screen
  furnitureList.clear(); // clear the list with all furniture
} //_CODE_:clear_Button:353556:

// New save button event handler
public void Save_Button(GButton source, GEvent event) { //_CODE_:save_button:123456:
  String filename = filename_field.getText();
  if (filename.length() > 0) {
    saveLayout(filename);
  }
} //_CODE_:save_button:123456:

// New load button event handler
public void Load_Button(GButton source, GEvent event) { //_CODE_:load_button:654321:
  String filename = filename_field.getText();
  if (filename.length() > 0) {
    loadLayout(filename);
  }
} //_CODE_:load_button:654321:

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  gui = GWindow.getWindow(this, "Window title", 0, 0, 500, 400, JAVA2D);
  gui.noLoop();
  gui.setActionOnClose(G4P.KEEP_OPEN);
  gui.addDrawHandler(this, "win_draw1");
  screenshot_button = new GButton(gui, 207, 117, 80, 30);
  screenshot_button.setText("Screenshot");
  screenshot_button.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  screenshot_button.addEventHandler(this, "Screenshot_Button");
  grid_button = new GButton(gui, 206, 76, 108, 30);
  grid_button.setText("Toggle Grid");
  grid_button.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  grid_button.addEventHandler(this, "Grid_Button");
  FurnitureList = new GDropList(gui, 30, 48, 90, 220, 10, 10);
  FurnitureList.setItems(loadStrings("list_873779"), 0);
  FurnitureList.addEventHandler(this, "dropList1_click1");
  delete_button = new GButton(gui, 320, 74, 80, 30);
  delete_button.setText("Delete");
  delete_button.setLocalColorScheme(GCScheme.RED_SCHEME);
  delete_button.addEventHandler(this, "Delete_Button");
  Room_X = new GCustomSlider(gui, 31, 106, 136, 44, "grey_blue");
  Room_X.setShowValue(true);
  Room_X.setLimits(600, 100, 800);
  Room_X.setNbrTicks(15);
  Room_X.setStickToTicks(true);
  Room_X.setNumberFormat(G4P.INTEGER, 0);
  Room_X.setOpaque(false);
  Room_X.addEventHandler(this, "RoomX");
  Room_Y = new GCustomSlider(gui, 32, 176, 134, 45, "grey_blue");
  Room_Y.setShowValue(true);
  Room_Y.setLimits(600, 100, 800);
  Room_Y.setNbrTicks(15);
  Room_Y.setStickToTicks(true);
  Room_Y.setNumberFormat(G4P.INTEGER, 0);
  Room_Y.setOpaque(false);
  Room_Y.addEventHandler(this, "RoomY");
  label2 = new GLabel(gui, 12, 83, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Room X");
  label2.setOpaque(false);
  label3 = new GLabel(gui, 14, 152, 80, 21);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Room Y");
  label3.setOpaque(false);
  clear_Button = new GButton(gui, 299, 118, 80, 30);
  clear_Button.setText("Clear");
  clear_Button.addEventHandler(this, "Clear_Button");
  label1 = new GLabel(gui, 29, 27, 97, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Furniture Library");
  label1.setOpaque(false);
  
  // Add new save/load UI elements
  save_button = new GButton(gui, 207, 160, 80, 30);
  save_button.setText("Save");
  save_button.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  save_button.addEventHandler(this, "Save_Button");

  load_button = new GButton(gui, 299, 160, 80, 30);
  load_button.setText("Load");
  load_button.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  load_button.addEventHandler(this, "Load_Button");

  filename_field = new GTextField(gui, 207, 200, 172, 30);
  filename_field.setText("mylayout");
  
  gui.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow gui;
GButton screenshot_button; 
GButton grid_button; 
GDropList FurnitureList; 
GButton delete_button; 
GCustomSlider Room_X; 
GCustomSlider Room_Y; 
GLabel label2; 
GLabel label3; 
GButton clear_Button; 
GLabel label1; 

// New UI element declarations for save/load functionality
GButton save_button;
GButton load_button;
GTextField filename_field;
