/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:gui:364064:
  appc.background(230);
} //_CODE_:gui:364064:

public void Screenshot_Button(GButton source, GEvent event) { //_CODE_:screenshot_button:805889:
  println("screenshot_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:screenshot_button:805889:

public void Grid_Button(GButton source, GEvent event) { //_CODE_:grid_button:697262:
  if (draw_g){draw_g = false;}
  else{draw_g = true;}
  
  println("grid_button - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:grid_button:697262:

public void dropList1_click1(GDropList source, GEvent event) { //_CODE_:FurnitureList:873779:
  println("FurnitureList - GDropList >> GEvent." + event + " @ " + millis());

  String selectedItem = source.getSelectedText();

  if (selectedItem == null) return;

  if (selectedItem.equals("TBed")) {
    selectedFurniture = new Furniture(0, 0, 125f, 125f, 0, color(255, 0, 100), true,imgTBed);
  } else if (selectedItem.equals("Couch")) {
    selectedFurniture = new Furniture(0, 0, 150f, 75f, 0, color(100, 0, 255), true, imgCouch);
  } else if (selectedItem.equals("Table")) {
    selectedFurniture = new Furniture(0, 0, 150f, 75f, 0, color(0, 255, 50), true, imgTable);
  } else if (selectedItem.equals("Chair")) {
    selectedFurniture = new Furniture(0, 0, 50f, 50f, 0, color(200, 100, 50), true, imgChair);
  } else if (selectedItem.equals("SBed")) {
    selectedFurniture = new Furniture(0, 0, 75f, 125f, 0, color(255, 200, 0), true, imgSBed);
  } else {
    return; // Unknown item
  }

  isFurnitureSelected = true;  
} //_CODE_:FurnitureList:873779:

public void Delete_Button(GButton source, GEvent event) { //_CODE_:delete_button:486369:
  println("delete_button - GButton >> GEvent." + event + " @ " + millis());
  if(delete_bool == false){delete_bool = true;print(true);}
  else if (delete_bool){delete_bool = false;}
  
} //_CODE_:delete_button:486369:

public void RoomX(GCustomSlider source, GEvent event) { //_CODE_:Room_X:797839:
  roomX = source.getValueF();
  room.resize(roomX, roomY);
  checkOutsideRoom();
} //_CODE_:Room_X:797839:

public void RoomY(GCustomSlider source, GEvent event) { //_CODE_:Room_Y:251960:
  roomY = source.getValueF();
  room.resize(roomX, roomY);
  checkOutsideRoom();
} //_CODE_:Room_Y:251960:

public void Clear_Button(GButton source, GEvent event) { //_CODE_:clear_Button:353556:
  room.clearFurniture();
  furnitureList.clear();
} //_CODE_:clear_Button:353556:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  gui = GWindow.getWindow(this, "Window title", 0, 0, 500, 400, JAVA2D);
  gui.noLoop();
  gui.setActionOnClose(G4P.KEEP_OPEN);
  gui.addDrawHandler(this, "win_draw1");
  screenshot_button = new GButton(gui, 207, 117, 80, 30);
  screenshot_button.setText("Screenshot");
  screenshot_button.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  screenshot_button.addEventHandler(this, "Screenshot_Button");
  grid_button = new GButton(gui, 206, 76, 108, 30);
  grid_button.setText("Toggle Grid");
  grid_button.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  grid_button.addEventHandler(this, "Grid_Button");
  FurnitureList = new GDropList(gui, 30, 48, 90, 120, 5, 10);
  FurnitureList.setItems(loadStrings("list_873779"), 0);
  FurnitureList.addEventHandler(this, "dropList1_click1");
  delete_button = new GButton(gui, 320, 74, 80, 30);
  delete_button.setText("Delete");
  delete_button.setLocalColorScheme(GCScheme.RED_SCHEME);
  delete_button.addEventHandler(this, "Delete_Button");
  Room_X = new GCustomSlider(gui, 31, 106, 136, 44, "grey_blue");
  Room_X.setShowValue(true);
  Room_X.setLimits(600, 100, 800);
  Room_X.setNbrTicks(15);
  Room_X.setStickToTicks(true);
  Room_X.setNumberFormat(G4P.INTEGER, 0);
  Room_X.setOpaque(false);
  Room_X.addEventHandler(this, "RoomX");
  Room_Y = new GCustomSlider(gui, 32, 176, 134, 45, "grey_blue");
  Room_Y.setShowValue(true);
  Room_Y.setLimits(600, 100, 800);
  Room_Y.setNbrTicks(15);
  Room_Y.setStickToTicks(true);
  Room_Y.setNumberFormat(G4P.INTEGER, 0);
  Room_Y.setOpaque(false);
  Room_Y.addEventHandler(this, "RoomY");
  label2 = new GLabel(gui, 12, 83, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Room X");
  label2.setOpaque(false);
  label3 = new GLabel(gui, 14, 152, 80, 21);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("Room Y");
  label3.setOpaque(false);
  clear_Button = new GButton(gui, 299, 118, 80, 30);
  clear_Button.setText("Clear");
  clear_Button.addEventHandler(this, "Clear_Button");
  label1 = new GLabel(gui, 29, 27, 97, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("Furniture Library");
  label1.setOpaque(false);
  gui.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow gui;
GButton screenshot_button; 
GButton grid_button; 
GDropList FurnitureList; 
GButton delete_button; 
GCustomSlider Room_X; 
GCustomSlider Room_Y; 
GLabel label2; 
GLabel label3; 
GButton clear_Button; 
GLabel label1; 
